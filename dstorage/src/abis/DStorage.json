{
  "contractName": "DStorage",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/DStorage.sol\":\"DStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/DStorage.sol\":{\"keccak256\":\"0x9420a9f65767b7ad4b5b87bc57e52362885b637602644351d35dfb3ff384edce\",\"urls\":[\"bzz-raw://cd95746bd1fdcdaec22d1cbfb9e55824142ed515faad9cea6d41b26e7a1207f7\",\"dweb:/ipfs/QmUjSPuDUfRKYgCVh6AA8HESfyuXw6E2gSirgGv6GXKhaT\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600881526020017f4453746f726167650000000000000000000000000000000000000000000000008152506000908051906020019061004f929190610062565b5034801561005c57600080fd5b50610107565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a357805160ff19168380011785556100d1565b828001600101855582156100d1579182015b828111156100d05782518255916020019190600101906100b5565b5b5090506100de91906100e2565b5090565b61010491905b808211156101005760008160009055506001016100e8565b5090565b90565b610186806101166000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806306fdde0314610030575b600080fd5b6100386100b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561007857808201518184015260208101905061005d565b50505050905090810190601f1680156100a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101495780601f1061011e57610100808354040283529160200191610149565b820191906000526020600020905b81548152906001019060200180831161012c57829003601f168201915b50505050508156fea265627a7a72315820adc41ac27ce48f0121317c71257f7bb0677c9279eed4188012cdce573ae2572964736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806306fdde0314610030575b600080fd5b6100386100b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561007857808201518184015260208101905061005d565b50505050905090810190601f1680156100a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101495780601f1061011e57610100808354040283529160200191610149565b820191906000526020600020905b81548152906001019060200180831161012c57829003601f168201915b50505050508156fea265627a7a72315820adc41ac27ce48f0121317c71257f7bb0677c9279eed4188012cdce573ae2572964736f6c63430005100032",
  "sourceMap": "69:93:0:-;;;93:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;132:23;8:9:-1;5:2;;;30:1;27;20:12;5:2;132:23:0;69:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "69:93:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;69:93:0;;;;;;;;;;;;;;;;;;;93:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;93:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract DStorage {\r\n   string public name = 'DStorage';\r\n\r\n   constructor() public {}\r\n\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\pin-d\\Desktop\\projects\\web_projects\\tutorials\\Dapp_University\\defi_tutorial\\dstorage\\src\\contracts\\DStorage.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/DStorage.sol",
    "exportedSymbols": {
      "DStorage": [
        9
      ]
    },
    "id": 10,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9,
        "linearizedBaseContracts": [
          9
        ],
        "name": "DStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 9,
            "src": "93:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "93:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4453746f72616765",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "114:10:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_71e44b0df098e49b64e3e857f58efe89334156a79fe51150de7d54015483635f",
                "typeString": "literal_string \"DStorage\""
              },
              "value": "DStorage"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7,
              "nodeType": "Block",
              "src": "153:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 8,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "143:2:0"
            },
            "returnParameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "153:0:0"
            },
            "scope": 9,
            "src": "132:23:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10,
        "src": "69:93:0"
      }
    ],
    "src": "33:131:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/src/contracts/DStorage.sol",
      "exportedSymbols": {
        "DStorage": [
          9
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            9
          ],
          "name": "DStorage",
          "scope": 10
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "name",
              "scope": 9,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 2,
                "name": "ElementaryTypeName",
                "src": "93:6:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "4453746f72616765",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"DStorage\"",
                  "value": "DStorage"
                },
                "id": 3,
                "name": "Literal",
                "src": "114:10:0"
              }
            ],
            "id": 4,
            "name": "VariableDeclaration",
            "src": "93:31:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 9,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 5,
                "name": "ParameterList",
                "src": "143:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6,
                "name": "ParameterList",
                "src": "153:0:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 7,
                "name": "Block",
                "src": "153:2:0"
              }
            ],
            "id": 8,
            "name": "FunctionDefinition",
            "src": "132:23:0"
          }
        ],
        "id": 9,
        "name": "ContractDefinition",
        "src": "69:93:0"
      }
    ],
    "id": 10,
    "name": "SourceUnit",
    "src": "33:131:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xF82b715C901c1fe774E6859D21453b122DDf2E19",
      "transactionHash": "0xeb99c069b47848e4ba2d20485e599ffef92d5d962651ca0c94d39a47f3dd6a68"
    }
  },
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-03-21T14:20:48.953Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}